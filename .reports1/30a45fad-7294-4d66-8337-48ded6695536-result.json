{"name": "test_login_password_invaliddetails", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: failed to change window state to 'normal', current state is 'maximized'\n  (Session info: chrome=126.0.6478.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF64F79EEA2+31554]\n\t(No symbol) [0x00007FF64F717ED9]\n\t(No symbol) [0x00007FF64F5D872A]\n\t(No symbol) [0x00007FF64F5B1C9A]\n\t(No symbol) [0x00007FF64F5AF21F]\n\t(No symbol) [0x00007FF64F5AE5C8]\n\t(No symbol) [0x00007FF64F684921]\n\t(No symbol) [0x00007FF64F64D02A]\n\t(No symbol) [0x00007FF64F66C977]\n\t(No symbol) [0x00007FF64F64CDD3]\n\t(No symbol) [0x00007FF64F61A33B]\n\t(No symbol) [0x00007FF64F61AED1]\n\tGetHandleVerifier [0x00007FF64FAA8B1D+3217341]\n\tGetHandleVerifier [0x00007FF64FAF5AE3+3532675]\n\tGetHandleVerifier [0x00007FF64FAEB0E0+3489152]\n\tGetHandleVerifier [0x00007FF64F84E776+750614]\n\t(No symbol) [0x00007FF64F72375F]\n\t(No symbol) [0x00007FF64F71EB14]\n\t(No symbol) [0x00007FF64F71ECA2]\n\t(No symbol) [0x00007FF64F70E16F]\n\tBaseThreadInitThunk [0x00007FF8211E257D+29]\n\tRtlUserThreadStart [0x00007FF822C0AA48+40]", "trace": "self = <test_cases.test_Login.Test_Login object at 0x000001BEFA0664E0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3e22e4a4a4923fe0400359421d141fd4\")>\n\n    def test_login_password_invaliddetails(self, setup):\n    \n        self.logger.info(\"*************** test_login_password_invaliddetails started *********************\")\n        self.driver = setup\n    \n        test_cases = [\n            (\"Tulasiram111\", \"Please enter a valid password\"),\n            (\"tu\", \"Please enter a valid password\"),\n            (\n                \"Tulasiram djdkfkjfjfkf fkdfjfjjfjfjf fjfjfhere iam entering more than 50 characters\",\n                \"Please enter a valid password\"),\n            (\"          \", \"Please enter a valid password\"),\n            (\"at name last space  \", \"Please enter a valid password\"),\n            (\"9865478922\", \"Please enter a valid password\"),\n            (\"$*$&#*#-#_@\", \"Please enter a valid password\")\n    \n        ]\n    \n        for login_password, expected_text in test_cases:\n            self.logger.info(f\"*************** Testing password: {login_password} *********************\")\n            self.driver.get(self.loginpage_url)\n>           self.driver.maximize_window()\n\ntest_cases\\test_Login.py:222: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:499: in maximize_window\n    self.execute(command, None)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BEFA0C4D70>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: failed to change window state to...07FF64F70E16F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8211E257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF822C0AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: failed to change window state to 'normal', current state is 'maximized'\nE         (Session info: chrome=126.0.6478.114)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF64F79EEA2+31554]\nE       \t(No symbol) [0x00007FF64F717ED9]\nE       \t(No symbol) [0x00007FF64F5D872A]\nE       \t(No symbol) [0x00007FF64F5B1C9A]\nE       \t(No symbol) [0x00007FF64F5AF21F]\nE       \t(No symbol) [0x00007FF64F5AE5C8]\nE       \t(No symbol) [0x00007FF64F684921]\nE       \t(No symbol) [0x00007FF64F64D02A]\nE       \t(No symbol) [0x00007FF64F66C977]\nE       \t(No symbol) [0x00007FF64F64CDD3]\nE       \t(No symbol) [0x00007FF64F61A33B]\nE       \t(No symbol) [0x00007FF64F61AED1]\nE       \tGetHandleVerifier [0x00007FF64FAA8B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF64FAF5AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF64FAEB0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF64F84E776+750614]\nE       \t(No symbol) [0x00007FF64F72375F]\nE       \t(No symbol) [0x00007FF64F71EB14]\nE       \t(No symbol) [0x00007FF64F71ECA2]\nE       \t(No symbol) [0x00007FF64F70E16F]\nE       \tBaseThreadInitThunk [0x00007FF8211E257D+29]\nE       \tRtlUserThreadStart [0x00007FF822C0AA48+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "attachments": [{"name": "log", "source": "ecc1a422-cea5-45d8-b5e2-0b7c100d4540-attachment.txt", "type": "text/plain"}], "start": 1719401684871, "stop": 1719401701240, "uuid": "bb47e581-de78-4201-bd91-ee07e2ff6f93", "historyId": "d0b03494b78c464a42ef684ca2f6715d", "testCaseId": "d0b03494b78c464a42ef684ca2f6715d", "fullName": "test_cases.test_Login.Test_Login#test_login_password_invaliddetails", "labels": [{"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "ZCSU016-ZL"}, {"name": "thread", "value": "32244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_Login"}]}